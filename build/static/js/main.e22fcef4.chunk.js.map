{"version":3,"sources":["Header.js","Footer.js","DimensionsProvider.js","InstrumentListProvider.js","SoundfontProvider.js","PianoConfig.js","InteractiveDemo.js","PlaybackDemo.js","songs.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","style","background","className","href","Footer","props","role","aria-label","DimensionsProvider","this","children","containerWidth","containerHeight","React","Component","Dimensions","InstrumentListProvider","state","instrumentList","loadInstrumentList","fetch","hostname","soundfont","then","response","json","data","setState","render","defaultProps","SoundfontProvider","loadInstrument","instrumentName","instrument","Soundfont","audioContext","format","nameToUrl","name","playNote","midiNumber","resumeAudio","audioNode","play","activeAudioNodes","Object","assign","stopNote","stop","resume","Promise","resolve","stopAllNotes","values","forEach","node","prevProps","prevState","onLoad","isLoading","AutoblurSelect","onChange","event","selectRef","current","blur","createRef","otherProps","ref","Label","PianoConfig","handleKeyDown","maxOffset","config","noteRange","last","first","keyboardShortcuts","length","key","reducedOffset","keyboardShortcutOffset","setConfig","increasedOffset","onChangeFirstNote","parseInt","target","value","onChangeLastNote","onChangeInstrument","window","addEventListener","removeEventListener","midiNumbersToNotes","MidiNumbers","NATURAL_MIDI_NUMBERS","reduce","obj","getAttributes","note","map","disabled","InteractiveDemo","fromNote","KeyboardShortcuts","create","firstNote","lastNote","keyboardConfig","HOME_ROW","soundfontHostname","color","size","width","PlaybackDemo","activeNotesIndex","isPlaying","console","warn","setPlaying","playbackIntervalFn","setInterval","song","clearInterval","classNames","onClick","activeNotes","lostWoods","AudioContext","webkitAudioContext","Installation","App","isLocalhost","Boolean","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","error","ReactDOM","document","getElementById","URL","process","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"sSA2BeA,MAzBf,WACE,OACE,yBAAKC,MAAO,CAAEC,WAAY,SACxB,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kCACb,2CACA,8FAEE,wBAAIA,UAAU,sBAFhB,iEAKA,yBAAKA,UAAU,QACb,uBACEA,UAAU,+BACVC,KAAK,2CAFP,4BCOGC,MAnBf,SAAgBC,GACd,OACE,yBAAKH,UAAU,uBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,8BAAf,YACY,IACV,0BAAMI,KAAK,MAAMC,aAAW,kBAA5B,gBAFF,KAKK,IACH,uBAAGL,UAAU,iBAAiBC,KAAK,4BACjC,kD,yCCVNK,E,iLAEF,OACE,6BACGC,KAAKJ,MAAMK,SAAS,CACnBC,eAAgBF,KAAKJ,MAAMM,eAC3BC,gBAAiBH,KAAKJ,MAAMO,uB,GANLC,IAAMC,WAaxBC,QAAaP,GCbtBQ,E,2MAWJC,MAAQ,CACNC,eAAgB,M,EAOlBC,mBAAqB,WACnBC,MAAM,GAAD,OAAI,EAAKf,MAAMgB,SAAf,YAA2B,EAAKhB,MAAMiB,UAAtC,gBACFC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKC,SAAS,CACZT,eAAgBQ,Q,mFARtBjB,KAAKU,uB,+BAcL,OAAOV,KAAKJ,MAAMuB,OAAOnB,KAAKQ,MAAMC,oB,GA9BHL,IAAMC,WAArCE,EAOGa,aAAe,CACpBP,UAAW,cA0BAN,Q,yBC/BTc,E,YAiBJ,WAAYzB,GAAQ,IAAD,8BACjB,4CAAMA,KA4BR0B,eAAiB,SAACC,GAEhB,EAAKL,SAAS,CACZM,WAAY,OAEdC,IAAUD,WAAW,EAAK5B,MAAM8B,aAAcH,EAAgB,CAC5DI,OAAQ,EAAK/B,MAAM+B,OACnBd,UAAW,EAAKjB,MAAMiB,UACtBe,UAAW,SAACC,EAAMhB,EAAWc,GAC3B,MAAM,GAAN,OAAU,EAAK/B,MAAMgB,SAArB,YAAiCC,EAAjC,YAA8CgB,EAA9C,YAAsDF,EAAtD,UAEDb,MAAK,SAACU,GACP,EAAKN,SAAS,CACZM,mBA1Ca,EA+CnBM,SAAW,SAACC,GACV,EAAKC,cAAclB,MAAK,WACtB,IAAMmB,EAAY,EAAKzB,MAAMgB,WAAWU,KAAKH,GAC7C,EAAKb,SAAS,CACZiB,iBAAkBC,OAAOC,OAAO,GAAI,EAAK7B,MAAM2B,iBAA7BC,OAAA,IAAAA,CAAA,GACfL,EAAaE,UApDH,EA0DnBK,SAAW,SAACP,GACV,EAAKC,cAAclB,MAAK,WACjB,EAAKN,MAAM2B,iBAAiBJ,KAGf,EAAKvB,MAAM2B,iBAAiBJ,GACpCQ,OACV,EAAKrB,SAAS,CACZiB,iBAAkBC,OAAOC,OAAO,GAAI,EAAK7B,MAAM2B,iBAA7BC,OAAA,IAAAA,CAAA,GAAkDL,EAAa,cAlEpE,EAuEnBC,YAAc,WACZ,MAAsC,cAAlC,EAAKpC,MAAM8B,aAAalB,MACnB,EAAKZ,MAAM8B,aAAac,SAExBC,QAAQC,WA3EA,EAgFnBC,aAAe,WACb,EAAK/C,MAAM8B,aAAac,SAAS1B,MAAK,WACXsB,OAAOQ,OAAO,EAAKpC,MAAM2B,kBACjCU,SAAQ,SAACC,GACpBA,GACFA,EAAKP,UAGT,EAAKrB,SAAS,CACZiB,iBAAkB,SAvFtB,EAAK3B,MAAQ,CACX2B,iBAAkB,GAClBX,WAAY,MAJG,E,iFASjBxB,KAAKsB,eAAetB,KAAKJ,MAAM2B,kB,yCAGdwB,EAAWC,GAK5B,GAJID,EAAUxB,iBAAmBvB,KAAKJ,MAAM2B,gBAC1CvB,KAAKsB,eAAetB,KAAKJ,MAAM2B,gBAG7ByB,EAAUxB,aAAexB,KAAKQ,MAAMgB,WAAY,CAClD,IAAKxB,KAAKJ,MAAMqD,OACd,OAEFjD,KAAKJ,MAAMqD,OAAO,CAChBnB,SAAU9B,KAAK8B,SACfQ,SAAUtC,KAAKsC,SACfK,aAAc3C,KAAK2C,kB,+BAuEvB,OAAO3C,KAAKJ,MAAMuB,OACdnB,KAAKJ,MAAMuB,OAAO,CAChB+B,WAAYlD,KAAKQ,MAAMgB,WACvBM,SAAU9B,KAAK8B,SACfQ,SAAUtC,KAAKsC,SACfK,aAAc3C,KAAK2C,eAErB,S,GAvHwBvC,IAAMC,WAAhCgB,EAWGD,aAAe,CACpBO,OAAQ,MACRd,UAAW,aACXU,eAAgB,wBA6GLF,Q,QC9HT8B,E,YACJ,WAAYvD,GAAQ,IAAD,8BACjB,4CAAMA,KAIRwD,SAAW,SAACC,GACV,EAAKzD,MAAMwD,SAASC,GACpB,EAAKC,UAAUC,QAAQC,QALvB,EAAKF,UAAYlD,IAAMqD,YAFN,E,sEAUT,IAAD,EACuCzD,KAAKJ,MAA3CK,EADD,EACCA,SAAuByD,GADxB,EACWN,SADX,wCAEP,OACE,4CAAYM,EAAZ,CAAwBN,SAAUpD,KAAKoD,SAAUO,IAAK3D,KAAKsD,YACxDrD,O,GAfoBG,IAAMC,WAqBnC,SAASuD,EAAMhE,GACb,OAAO,2BAAOH,UAAU,mBAAmBG,EAAMK,U,IAuHpC4D,E,2MA3GbC,cAAgB,SAACT,GACf,IAEMU,EAFW,EAAKnE,MAAMoE,OAAOC,UAAUC,KAAO,EAAKtE,MAAMoE,OAAOC,UAAUE,MAAQ,EAE3D,EAAKvE,MAAMwE,kBAAkBC,OAC1D,GAAkB,cAAdhB,EAAMiB,IAAqB,CAC7B,IAAMC,EAAgB,EAAK3E,MAAMoE,OAAOQ,uBAAyB,EAC7DD,GAJY,GAKd,EAAK3E,MAAM6E,UAAU,CACnBD,uBAAwBD,SAGvB,GAAkB,eAAdlB,EAAMiB,IAAsB,CACrC,IAAMI,EAAkB,EAAK9E,MAAMoE,OAAOQ,uBAAyB,EAC/DE,GAAmBX,GACrB,EAAKnE,MAAM6E,UAAU,CACnBD,uBAAwBE,M,EAMhCC,kBAAoB,SAACtB,GACnB,EAAKzD,MAAM6E,UAAU,CACnBR,UAAW,CACTE,MAAOS,SAASvB,EAAMwB,OAAOC,MAAO,IACpCZ,KAAM,EAAKtE,MAAMoE,OAAOC,UAAUC,S,EAKxCa,iBAAmB,SAAC1B,GAClB,EAAKzD,MAAM6E,UAAU,CACnBR,UAAW,CACTE,MAAO,EAAKvE,MAAMoE,OAAOC,UAAUE,MACnCD,KAAMU,SAASvB,EAAMwB,OAAOC,MAAO,Q,EAKzCE,mBAAqB,SAAC3B,GACpB,EAAKzD,MAAM6E,UAAU,CACnBlD,eAAgB8B,EAAMwB,OAAOC,S,mFAhD/BG,OAAOC,iBAAiB,UAAWlF,KAAK8D,iB,6CAIxCmB,OAAOE,oBAAoB,UAAWnF,KAAK8D,iB,+BAiD3C,IAAMsB,EAAqBC,IAAYC,qBAAqBC,QAAO,SAACC,EAAKzD,GAEvE,OADAyD,EAAIzD,GAAcsD,IAAYI,cAAc1D,GAAY2D,KACjDF,IACN,IAJI,EAK+BxF,KAAKJ,MAAMoE,OAAzCC,EALD,EAKCA,UAAW1C,EALZ,EAKYA,eAEnB,OACE,yBAAK9B,UAAU,YACb,yBAAKA,UAAU,SACb,kBAACmE,EAAD,mBACA,kBAAC,EAAD,CACEnE,UAAU,eACV2D,SAAUpD,KAAK2E,kBACfG,MAAOb,EAAUE,OAEhBkB,IAAYC,qBAAqBK,KAAI,SAAC5D,GAAD,OACpC,4BAAQ+C,MAAO/C,EAAY6D,SAAU7D,GAAckC,EAAUC,KAAMI,IAAKvC,GACrEqD,EAAmBrD,SAK5B,yBAAKtC,UAAU,SACb,kBAACmE,EAAD,kBACA,kBAAC,EAAD,CACEnE,UAAU,eACV2D,SAAUpD,KAAK+E,iBACfD,MAAOb,EAAUC,MAEhBmB,IAAYC,qBAAqBK,KAAI,SAAC5D,GAAD,OACpC,4BAAQ+C,MAAO/C,EAAY6D,SAAU7D,GAAckC,EAAUE,MAAOG,IAAKvC,GACtEqD,EAAmBrD,SAK5B,yBAAKtC,UAAU,SACb,kBAACmE,EAAD,mBACA,kBAAC,EAAD,CACEnE,UAAU,eACVqF,MAAOvD,EACP6B,SAAUpD,KAAKgF,oBAEdhF,KAAKJ,MAAMa,eAAekF,KAAI,SAACb,GAAD,OAC7B,4BAAQA,MAAOA,EAAOR,IAAKQ,GACxBA,QAKT,yBAAKrF,UAAU,YACb,2BAAOA,UAAU,cAAjB,OACM,8CADN,QACsC,+CADtC,iD,GA1GgBW,IAAMC,WCsDjBwF,E,2MAxEbrF,MAAQ,CACNwD,OAAQ,CACNzC,eAAgB,uBAChB0C,UAAW,CACTE,MAAOkB,IAAYS,SAAS,MAC5B5B,KAAMmB,IAAYS,SAAS,OAE7BtB,uBAAwB,I,wEAIlB,IAAD,OACDJ,EAAoB2B,IAAkBC,OAAO,CACjDC,UAAWjG,KAAKQ,MAAMwD,OAAOC,UAAUE,MAAQnE,KAAKQ,MAAMwD,OAAOQ,uBACjE0B,SAAUlG,KAAKQ,MAAMwD,OAAOC,UAAUC,KAAOlE,KAAKQ,MAAMwD,OAAOQ,uBAC/D2B,eAAgBJ,IAAkBK,WAGpC,OACE,kBAAC,EAAD,CACE1E,aAAc1B,KAAKJ,MAAM8B,aACzBH,eAAgBvB,KAAKQ,MAAMwD,OAAOzC,eAClCX,SAAUZ,KAAKJ,MAAMyG,kBACrBlF,OAAQ,gBAAG+B,EAAH,EAAGA,UAAWpB,EAAd,EAAcA,SAAUQ,EAAxB,EAAwBA,SAAUK,EAAlC,EAAkCA,aAAlC,OACN,6BACE,yBAAKlD,UAAU,eACb,uBAAGA,UAAU,IAAb,wDACA,yBAAKF,MAAO,CAAE+G,MAAO,SACnB,kBAAC,IAAD,CAAiBC,KAAM,OAG3B,yBAAK9G,UAAU,QACb,kBAAC,EAAD,MACG,gBAAGS,EAAH,EAAGA,eAAH,OACC,kBAAC,IAAD,CACE+D,UAAW,EAAKzD,MAAMwD,OAAOC,UAC7BG,kBAAmBA,EACnBtC,SAAUA,EACVQ,SAAUA,EACVsD,SAAU1C,EACVsD,MAAOtG,QAKf,yBAAKT,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,EAAD,CACEmB,SAAU,EAAKhB,MAAMyG,kBACrBlF,OAAQ,SAACV,GAAD,OACN,kBAAC,EAAD,CACEuD,OAAQ,EAAKxD,MAAMwD,OACnBS,UAAW,SAACT,GACV,EAAK9C,SAAS,CACZ8C,OAAQ5B,OAAOC,OAAO,GAAI,EAAK7B,MAAMwD,OAAQA,KAE/CrB,KAEFlC,eAAgBA,GAAkB,CAAC,EAAKD,MAAMwD,OAAOzC,gBACrD6C,kBAAmBA,iB,GA5DXhE,IAAMC,W,gBCmFrBoG,E,YA9Eb,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KAPRY,MAAQ,CACNkG,iBAAkB,EAClBC,WAAW,EACXhE,aAAc,kBAAMiE,QAAQC,KAAK,iCAGhB,EAuBnBC,WAAa,SAAChC,GACZ,EAAK5D,SAAS,CAAEyF,UAAW7B,KAtB3B,EAAKiC,mBAAqB,KAFT,E,gFAKAhE,EAAWC,GAAY,IAAD,OACnCA,EAAU2D,YAAc3G,KAAKQ,MAAMmG,YACjC3G,KAAKQ,MAAMmG,UACb3G,KAAK+G,mBAAqBC,aAAY,WACpC,EAAK9F,SAAS,CACZwF,kBAAmB,EAAKlG,MAAMkG,iBAAmB,GAAK,EAAK9G,MAAMqH,KAAK5C,WAEvE,MAEH6C,cAAclH,KAAK+G,oBACnB/G,KAAKQ,MAAMmC,eACX3C,KAAKkB,SAAS,CACZwF,iBAAkB,Q,+BAUhB,IAAD,OACDzC,EAAY,CAChBE,MAAOkB,IAAYS,SAAS,MAC5B5B,KAAMmB,IAAYS,SAAS,OAG7B,OACE,6BACE,yBAAKrG,UAAU,eACb,sDACA,6BACE,4BACEA,UAAW0H,IAAW,MAAO,CAC3B,oBAAqBnH,KAAKQ,MAAMmG,UAChC,qBAAsB3G,KAAKQ,MAAMmG,YAEnCS,QAAS,kBAAM,EAAKN,YAAY,EAAKtG,MAAMmG,aAE1C3G,KAAKQ,MAAMmG,UAAY,OAAS,WAIvC,yBAAKlH,UAAU,QACb,kBAAC,EAAD,CACEiC,aAAc1B,KAAKJ,MAAM8B,aACzBH,eAAe,UACfX,SAAUZ,KAAKJ,MAAMyG,kBACrBpD,OAAQ,gBAAGN,EAAH,EAAGA,aAAH,OAAsB,EAAKzB,SAAS,CAAEyB,kBAC9CxB,OAAQ,gBAAG+B,EAAH,EAAGA,UAAWpB,EAAd,EAAcA,SAAUQ,EAAxB,EAAwBA,SAAxB,EAAkCK,aAAlC,OACN,kBAAC,EAAD,MACG,gBAAGzC,EAAH,EAAGA,eAAH,OACC,kBAAC,IAAD,CACEmH,YACE,EAAK7G,MAAMmG,UAAY,EAAK/G,MAAMqH,KAAK,EAAKzG,MAAMkG,kBAAoB,GAExEzC,UAAWA,EACXuC,MAAOtG,EACP4B,SAAUA,EACVQ,SAAUA,EACVsD,SAAU1C,IAAc,EAAK1C,MAAMmG,wB,GAzE5BvG,IAAMC,WCPpBiH,EAAY,CACvB,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,GACA,GACA,GACA,CAAC,IACD,CAAC,IACD,CAAC,IACD,CAAC,IACD,GACA,GACA,GACA,GACA,ICtBI5F,G,MAAe,IAAKuD,OAAOsC,cAAgBtC,OAAOuC,qBAGxD,SAASC,IACP,OACE,yBAAKhI,UAAU,eACb,4CACA,uBAAGA,UAAU,QAAb,6BACA,uBAAGA,UAAU,QACX,0BAAMA,UAAU,2BAAhB,yBAEF,yBAAKA,UAAU,QACb,uBAAGA,UAAU,sBAAsBC,KAAK,2CAAxC,yB,IA0COgI,E,iLAhCX,OACE,6BACE,kBAAC,EAAD,MACA,yBAAKjI,UAAU,aACb,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,EAAD,CAAiBiC,aAAcA,EAAc2E,kBA3BjC,4CA8BhB,wBAAI5G,UAAU,SACd,yBAAKA,UAAU,YACb,yBAAKA,UAAU,wBACb,kBAAC,EAAD,CACEiC,aAAcA,EACd2E,kBAnCU,wCAoCVY,KAAMK,MAIZ,wBAAI7H,UAAU,SACd,yBAAKA,UAAU,YACb,yBAAKA,UAAU,OACb,kBAACgI,EAAD,SAIN,kBAAC,EAAD,W,GA5BUrH,IAAMC,WCpBlBsH,EAAcC,QACW,cAA7B3C,OAAO4C,SAASjH,UAEe,UAA7BqE,OAAO4C,SAASjH,UAEhBqE,OAAO4C,SAASjH,SAASkH,MAAM,2DAqCnC,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTlH,MAAK,SAACsH,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9H,QACfyH,UAAUC,cAAcO,WAK1B7B,QAAQ8B,IAAI,6CAKZ9B,QAAQ8B,IAAI,4CAMrBC,OAAM,SAACC,GACNhC,QAAQgC,MAAM,4CAA6CA,MCvEjEC,IAAS1H,OAAO,kBAAC,EAAD,MAAS2H,SAASC,eAAe,SDYlC,WACb,GAA6C,kBAAmBd,UAAW,CAGzE,GADkB,IAAIe,IAAIC,eAAwBhE,OAAO4C,UAC3CqB,SAAWjE,OAAO4C,SAASqB,OAIvC,OAGFjE,OAAOC,iBAAiB,QAAQ,WAC9B,IAAM8C,EAAK,UAAMiB,eAAN,sBAEPtB,IAiDV,SAAiCK,GAE/BrH,MAAMqH,GACHlH,MAAK,SAACC,GAGiB,MAApBA,EAASoI,SACuD,IAAhEpI,EAASqI,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CrB,UAAUC,cAAcqB,MAAMzI,MAAK,SAACsH,GAClCA,EAAaoB,aAAa1I,MAAK,WAC7BmE,OAAO4C,SAAS4B,eAKpB1B,EAAgBC,MAGnBW,OAAM,WACL/B,QAAQ8B,IAAI,oEApEVgB,CAAwB1B,GAIxBC,UAAUC,cAAcqB,MAAMzI,MAAK,WACjC8F,QAAQ8B,IACN,gHAMJX,EAAgBC,OCvCxB2B,K","file":"static/js/main.e22fcef4.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header() {\n  return (\n    <div style={{ background: '#333' }}>\n      <div className=\"container\">\n        <div className=\"text-sm-center text-white py-5\">\n          <h1>react-piano</h1>\n          <p>\n            An interactive piano keyboard for React. Supports custom sounds,\n            <br className=\"d-none d-sm-block\" /> touch/click/keyboard events, and fully configurable\n            styling.\n          </p>\n          <div className=\"mt-4\">\n            <a\n              className=\"btn btn-outline-light btn-lg\"\n              href=\"https://github.com/kevinsqi/react-piano\"\n            >\n              View docs on Github\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <div className=\"bg-yellow mt-5 py-5\">\n      <div className=\"container\">\n        <div className=\"text-center text-secondary\">\n          Made with{' '}\n          <span role=\"img\" aria-label=\"keyboard emoji\">\n            🎵\n          </span>\n          by{' '}\n          <a className=\"text-secondary\" href=\"https://www.kevinqi.com/\">\n            <strong>@kevinsqi</strong>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Dimensions from 'react-dimensions';\n\nclass DimensionsProvider extends React.Component {\n  render() {\n    return (\n      <div>\n        {this.props.children({\n          containerWidth: this.props.containerWidth,\n          containerHeight: this.props.containerHeight,\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Dimensions()(DimensionsProvider);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass InstrumentListProvider extends React.Component {\n  static propTypes = {\n    hostname: PropTypes.string.isRequired,\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    soundfont: 'MusyngKite',\n  };\n\n  state = {\n    instrumentList: null,\n  };\n\n  componentDidMount() {\n    this.loadInstrumentList();\n  }\n\n  loadInstrumentList = () => {\n    fetch(`${this.props.hostname}/${this.props.soundfont}/names.json`)\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          instrumentList: data,\n        });\n      });\n  };\n\n  render() {\n    return this.props.render(this.state.instrumentList);\n  }\n}\n\nexport default InstrumentListProvider;\n","// See https://github.com/danigb/soundfont-player\n// for more documentation on prop options.\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Soundfont from 'soundfont-player';\n\nclass SoundfontProvider extends React.Component {\n  static propTypes = {\n    instrumentName: PropTypes.string.isRequired,\n    hostname: PropTypes.string.isRequired,\n    format: PropTypes.oneOf(['mp3', 'ogg']),\n    soundfont: PropTypes.oneOf(['MusyngKite', 'FluidR3_GM']),\n    audioContext: PropTypes.instanceOf(window.AudioContext),\n    onLoad: PropTypes.func,\n    render: PropTypes.func,\n  };\n\n  static defaultProps = {\n    format: 'mp3',\n    soundfont: 'MusyngKite',\n    instrumentName: 'acoustic_grand_piano',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeAudioNodes: {},\n      instrument: null,\n    };\n  }\n\n  componentDidMount() {\n    this.loadInstrument(this.props.instrumentName);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.instrumentName !== this.props.instrumentName) {\n      this.loadInstrument(this.props.instrumentName);\n    }\n\n    if (prevState.instrument !== this.state.instrument) {\n      if (!this.props.onLoad) {\n        return;\n      }\n      this.props.onLoad({\n        playNote: this.playNote,\n        stopNote: this.stopNote,\n        stopAllNotes: this.stopAllNotes,\n      });\n    }\n  }\n\n  loadInstrument = (instrumentName) => {\n    // Re-trigger loading state\n    this.setState({\n      instrument: null,\n    });\n    Soundfont.instrument(this.props.audioContext, instrumentName, {\n      format: this.props.format,\n      soundfont: this.props.soundfont,\n      nameToUrl: (name, soundfont, format) => {\n        return `${this.props.hostname}/${soundfont}/${name}-${format}.js`;\n      },\n    }).then((instrument) => {\n      this.setState({\n        instrument,\n      });\n    });\n  };\n\n  playNote = (midiNumber) => {\n    this.resumeAudio().then(() => {\n      const audioNode = this.state.instrument.play(midiNumber);\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, {\n          [midiNumber]: audioNode,\n        }),\n      });\n    });\n  };\n\n  stopNote = (midiNumber) => {\n    this.resumeAudio().then(() => {\n      if (!this.state.activeAudioNodes[midiNumber]) {\n        return;\n      }\n      const audioNode = this.state.activeAudioNodes[midiNumber];\n      audioNode.stop();\n      this.setState({\n        activeAudioNodes: Object.assign({}, this.state.activeAudioNodes, { [midiNumber]: null }),\n      });\n    });\n  };\n\n  resumeAudio = () => {\n    if (this.props.audioContext.state === 'suspended') {\n      return this.props.audioContext.resume();\n    } else {\n      return Promise.resolve();\n    }\n  };\n\n  // Clear any residual notes that don't get called with stopNote\n  stopAllNotes = () => {\n    this.props.audioContext.resume().then(() => {\n      const activeAudioNodes = Object.values(this.state.activeAudioNodes);\n      activeAudioNodes.forEach((node) => {\n        if (node) {\n          node.stop();\n        }\n      });\n      this.setState({\n        activeAudioNodes: {},\n      });\n    });\n  };\n\n  render() {\n    return this.props.render\n      ? this.props.render({\n          isLoading: !this.state.instrument,\n          playNote: this.playNote,\n          stopNote: this.stopNote,\n          stopAllNotes: this.stopAllNotes,\n        })\n      : null;\n  }\n}\n\nexport default SoundfontProvider;\n","import React from 'react';\nimport { MidiNumbers } from 'react-piano';\n\nclass AutoblurSelect extends React.Component {\n  constructor(props) {\n    super(props);\n    this.selectRef = React.createRef();\n  }\n\n  onChange = (event) => {\n    this.props.onChange(event);\n    this.selectRef.current.blur();\n  };\n\n  render() {\n    const { children, onChange, ...otherProps } = this.props;\n    return (\n      <select {...otherProps} onChange={this.onChange} ref={this.selectRef}>\n        {children}\n      </select>\n    );\n  }\n}\n\nfunction Label(props) {\n  return <small className=\"mb-1 text-muted\">{props.children}</small>;\n}\n\nclass PianoConfig extends React.Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = (event) => {\n    const numNotes = this.props.config.noteRange.last - this.props.config.noteRange.first + 1;\n    const minOffset = 0;\n    const maxOffset = numNotes - this.props.keyboardShortcuts.length;\n    if (event.key === 'ArrowLeft') {\n      const reducedOffset = this.props.config.keyboardShortcutOffset - 1;\n      if (reducedOffset >= minOffset) {\n        this.props.setConfig({\n          keyboardShortcutOffset: reducedOffset,\n        });\n      }\n    } else if (event.key === 'ArrowRight') {\n      const increasedOffset = this.props.config.keyboardShortcutOffset + 1;\n      if (increasedOffset <= maxOffset) {\n        this.props.setConfig({\n          keyboardShortcutOffset: increasedOffset,\n        });\n      }\n    }\n  };\n\n  onChangeFirstNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: parseInt(event.target.value, 10),\n        last: this.props.config.noteRange.last,\n      },\n    });\n  };\n\n  onChangeLastNote = (event) => {\n    this.props.setConfig({\n      noteRange: {\n        first: this.props.config.noteRange.first,\n        last: parseInt(event.target.value, 10),\n      },\n    });\n  };\n\n  onChangeInstrument = (event) => {\n    this.props.setConfig({\n      instrumentName: event.target.value,\n    });\n  };\n\n  render() {\n    const midiNumbersToNotes = MidiNumbers.NATURAL_MIDI_NUMBERS.reduce((obj, midiNumber) => {\n      obj[midiNumber] = MidiNumbers.getAttributes(midiNumber).note;\n      return obj;\n    }, {});\n    const { noteRange, instrumentName } = this.props.config;\n\n    return (\n      <div className=\"form-row\">\n        <div className=\"col-3\">\n          <Label>First note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeFirstNote}\n            value={noteRange.first}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber >= noteRange.last} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-3\">\n          <Label>Last note</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            onChange={this.onChangeLastNote}\n            value={noteRange.last}\n          >\n            {MidiNumbers.NATURAL_MIDI_NUMBERS.map((midiNumber) => (\n              <option value={midiNumber} disabled={midiNumber <= noteRange.first} key={midiNumber}>\n                {midiNumbersToNotes[midiNumber]}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col-6\">\n          <Label>Instrument</Label>\n          <AutoblurSelect\n            className=\"form-control\"\n            value={instrumentName}\n            onChange={this.onChangeInstrument}\n          >\n            {this.props.instrumentList.map((value) => (\n              <option value={value} key={value}>\n                {value}\n              </option>\n            ))}\n          </AutoblurSelect>\n        </div>\n        <div className=\"col mt-2\">\n          <small className=\"text-muted\">\n            Use <strong>left arrow</strong> and <strong>right arrow</strong> to move the keyboard\n            shortcuts around.\n          </small>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PianoConfig;\n","import React from 'react';\nimport { Piano, KeyboardShortcuts, MidiNumbers } from 'react-piano';\nimport MdArrowDownward from 'react-icons/lib/md/arrow-downward';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport InstrumentListProvider from './InstrumentListProvider';\nimport SoundfontProvider from './SoundfontProvider';\nimport PianoConfig from './PianoConfig';\n\nclass InteractiveDemo extends React.Component {\n  state = {\n    config: {\n      instrumentName: 'acoustic_grand_piano',\n      noteRange: {\n        first: MidiNumbers.fromNote('c3'),\n        last: MidiNumbers.fromNote('f5'),\n      },\n      keyboardShortcutOffset: 0,\n    },\n  };\n\n  render() {\n    const keyboardShortcuts = KeyboardShortcuts.create({\n      firstNote: this.state.config.noteRange.first + this.state.config.keyboardShortcutOffset,\n      lastNote: this.state.config.noteRange.last + this.state.config.keyboardShortcutOffset,\n      keyboardConfig: KeyboardShortcuts.HOME_ROW,\n    });\n\n    return (\n      <SoundfontProvider\n        audioContext={this.props.audioContext}\n        instrumentName={this.state.config.instrumentName}\n        hostname={this.props.soundfontHostname}\n        render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n          <div>\n            <div className=\"text-center\">\n              <p className=\"\">Try it by clicking, tapping, or using your keyboard:</p>\n              <div style={{ color: '#777' }}>\n                <MdArrowDownward size={32} />\n              </div>\n            </div>\n            <div className=\"mt-4\">\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    noteRange={this.state.config.noteRange}\n                    keyboardShortcuts={keyboardShortcuts}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                    disabled={isLoading}\n                    width={containerWidth}\n                  />\n                )}\n              </DimensionsProvider>\n            </div>\n            <div className=\"row mt-5\">\n              <div className=\"col-lg-8 offset-lg-2\">\n                <InstrumentListProvider\n                  hostname={this.props.soundfontHostname}\n                  render={(instrumentList) => (\n                    <PianoConfig\n                      config={this.state.config}\n                      setConfig={(config) => {\n                        this.setState({\n                          config: Object.assign({}, this.state.config, config),\n                        });\n                        stopAllNotes();\n                      }}\n                      instrumentList={instrumentList || [this.state.config.instrumentName]}\n                      keyboardShortcuts={keyboardShortcuts}\n                    />\n                  )}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      />\n    );\n  }\n}\n\nexport default InteractiveDemo;\n","import React from 'react';\nimport { Piano, MidiNumbers } from 'react-piano';\nimport classNames from 'classnames';\n\nimport DimensionsProvider from './DimensionsProvider';\nimport SoundfontProvider from './SoundfontProvider';\n\nclass PlaybackDemo extends React.Component {\n  state = {\n    activeNotesIndex: 0,\n    isPlaying: false,\n    stopAllNotes: () => console.warn('stopAllNotes not yet loaded'),\n  };\n\n  constructor(props) {\n    super(props);\n    this.playbackIntervalFn = null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.isPlaying !== this.state.isPlaying) {\n      if (this.state.isPlaying) {\n        this.playbackIntervalFn = setInterval(() => {\n          this.setState({\n            activeNotesIndex: (this.state.activeNotesIndex + 1) % this.props.song.length,\n          });\n        }, 200);\n      } else {\n        clearInterval(this.playbackIntervalFn);\n        this.state.stopAllNotes();\n        this.setState({\n          activeNotesIndex: 0,\n        });\n      }\n    }\n  }\n\n  setPlaying = (value) => {\n    this.setState({ isPlaying: value });\n  };\n\n  render() {\n    const noteRange = {\n      first: MidiNumbers.fromNote('c3'),\n      last: MidiNumbers.fromNote('f5'),\n    };\n\n    return (\n      <div>\n        <div className=\"text-center\">\n          <p>Or try playing it back.</p>\n          <div>\n            <button\n              className={classNames('btn', {\n                'btn-outline-info': !this.state.isPlaying,\n                'btn-outline-danger': this.state.isPlaying,\n              })}\n              onClick={() => this.setPlaying(!this.state.isPlaying)}\n            >\n              {this.state.isPlaying ? 'Stop' : 'Start'}\n            </button>\n          </div>\n        </div>\n        <div className=\"mt-4\">\n          <SoundfontProvider\n            audioContext={this.props.audioContext}\n            instrumentName=\"ocarina\"\n            hostname={this.props.soundfontHostname}\n            onLoad={({ stopAllNotes }) => this.setState({ stopAllNotes })}\n            render={({ isLoading, playNote, stopNote, stopAllNotes }) => (\n              <DimensionsProvider>\n                {({ containerWidth }) => (\n                  <Piano\n                    activeNotes={\n                      this.state.isPlaying ? this.props.song[this.state.activeNotesIndex] : []\n                    }\n                    noteRange={noteRange}\n                    width={containerWidth}\n                    playNote={playNote}\n                    stopNote={stopNote}\n                    disabled={isLoading || !this.state.isPlaying}\n                  />\n                )}\n              </DimensionsProvider>\n            )}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PlaybackDemo;\n","export const lostWoods = [\n  [65],\n  [69],\n  [71],\n  [],\n  [65],\n  [69],\n  [71],\n  [],\n  [65],\n  [69],\n  [71],\n  [76],\n  [74],\n  [],\n  [71],\n  [72],\n  [71],\n  [67],\n  [64],\n  [],\n  [],\n  [],\n  [],\n  [62],\n  [64],\n  [67],\n  [64],\n  [],\n  [],\n  [],\n  [],\n  [],\n];\n","import React from 'react';\nimport 'react-piano/dist/styles.css';\n\nimport Header from './Header';\nimport Footer from './Footer';\nimport InteractiveDemo from './InteractiveDemo';\nimport PlaybackDemo from './PlaybackDemo';\nimport { lostWoods } from './songs';\nimport './App.css';\n\nconst audioContext = new (window.AudioContext || window.webkitAudioContext)();\nconst soundfontHostname = 'https://d1pzp51pvbm36p.cloudfront.net';\n\nfunction Installation() {\n  return (\n    <div className=\"text-center\">\n      <h2>Installation</h2>\n      <p className=\"mt-4\">Install with yarn or npm:</p>\n      <p className=\"mt-3\">\n        <code className=\"p-2 text-dark bg-yellow\">yarn add react-piano</code>\n      </p>\n      <div className=\"mt-5\">\n        <a className=\"btn btn-info btn-lg\" href=\"https://github.com/kevinsqi/react-piano\">\n          View docs on Github\n        </a>\n      </div>\n    </div>\n  );\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <div className=\"container\">\n          <div className=\"row mt-5\">\n            <div className=\"col-md-8 offset-md-2\">\n              <InteractiveDemo audioContext={audioContext} soundfontHostname={soundfontHostname} />\n            </div>\n          </div>\n          <hr className=\"mt-5\" />\n          <div className=\"row mt-5\">\n            <div className=\"col-md-8 offset-md-2\">\n              <PlaybackDemo\n                audioContext={audioContext}\n                soundfontHostname={soundfontHostname}\n                song={lostWoods}\n              />\n            </div>\n          </div>\n          <hr className=\"mt-5\" />\n          <div className=\"row mt-5\">\n            <div className=\"col\">\n              <Installation />\n            </div>\n          </div>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ',\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}